// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @unique
  email     String    @unique
  File      File[]
  Message   Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model UserSubscription {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String   @unique
  stripeCustomerId       String?  @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?  @unique @map(name: "stripe_subscriptions_id")
  stripePriceId          String?  @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String
  Message      Message[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  User   User?  @relation(fields: [userId], references: [userId])
  userId String
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  text String @db.String()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?  @relation(fields: [userId], references: [userId])
  userId String

  File   File?   @relation(fields: [fileId], references: [id])
  fileId String? @db.ObjectId
}
